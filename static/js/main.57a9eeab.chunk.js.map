{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","React","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","nextId","deleteItem","addItem","index","findIndex","elem","slice","body","newItem","old","changeItem","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57a9eeab.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({liked,allPosts}) => {\r\n    return (\r\n        <div className='app-header d-flex'>\r\n            <h1>Vitaliy Parasochkin</h1>\r\n            <h2>{allPosts} записей, из них лайкнули {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({\r\n            term: term\r\n        })\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className = 'form-control search-input'\r\n                type='text'\r\n                placeholder='Поиск по записям'\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all',label:'Все'},\r\n            {name: 'like',label:'Понравилось'},\r\n        ]\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter,onFilterSelect} = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button \r\n                    key={name} \r\n                    type=\"button\" \r\n                    className={`btn ${clazz}`}\r\n                    onClick={() => onFilterSelect(name)}\r\n                >{label}</button>\r\n            )\r\n        })\r\n        return (\r\n            <div className='btn-group'>\r\n                {buttons}\r\n            </div>\r\n        ) \r\n    }\r\n}","import React from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends React.Component {\r\n    render() {\r\n        const {label,onDelete,onToggleImportant,onToggleLiked,important,like} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n        if (important) {\r\n            classNames +=' important';\r\n        }\r\n        if (like) {\r\n            classNames +=' like';\r\n        }\r\n        return (\r\n        <div className={classNames}>\r\n            <span onClick={onToggleLiked} className='app-list-item-label'>{label}</span>\r\n            <div className='d-flex justify-content-center align-items-center'>\r\n                <button \r\n                type='button' \r\n                className='btn-star btn-sm'\r\n                onClick={onToggleImportant}>\r\n                    <i className='fa fa-star'></i>\r\n                </button>\r\n                <button \r\n                onClick={onDelete}\r\n                type='button' \r\n                className='btn-trash btn-sm'>\r\n                    <i className='fa fa-trash-o'></i>\r\n                </button>\r\n                <i className='fa fa-heart'></i>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PostListItem from '../post-list-item/post-list-item'\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map(item =>{\r\n        const {id,...itemProps} = item;\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <PostListItem \r\n                {...itemProps} \r\n                onDelete={() => onDelete(id)} \r\n                onToggleImportant = {() => onToggleImportant(id)}\r\n                onToggleLiked = {() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n    return (\r\n        <ul className='app-list list-group'>\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React, {Component} from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e) {\r\n\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className='bottom-panel d-flex'\r\n                onSubmit={this.onSubmit}\r\n                >\r\n                <input\r\n                    type='text'\r\n                    placeholder='О чем вы думаете сейчас?'\r\n                    className='form-control new-post-label'\r\n                    onChange={this.onValueChange}\r\n                    value = {this.state.text}\r\n                />\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-outline-secondary'>\r\n                    Добавить</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React , {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header'\r\nimport SearchPanel from '../search-panel/search-panel'\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter'\r\nimport PostList from '../post-list/post-list'\r\nimport PostAddForm from '../post-add-form/post-add-form'\r\nimport nextId from 'react-id-generator';\r\nimport './app.css'\r\n\r\n\r\nexport default class App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: 'Going to learn JS', important : false, like : false, id:nextId()},\r\n                {label: 'That is so good', important : false,like : false,id:nextId()},\r\n                {label: 'I need a break', important : false,like : false,id:nextId()}\r\n            ],\r\n            term : '',\r\n            filter: 'all'\r\n        }\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n    }\r\n\r\n\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: nextId()\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return { \r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    changeItem(id,item) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, [item]: !old[item]};\r\n\r\n            const newArr = [...data.slice(0, index),newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    onToggleImportant(id) {\r\n        this.changeItem(id,'important');\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.changeItem(id,'like');\r\n    }\r\n    searchPost(items,term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter( (item) =>{\r\n            return item.label.indexOf(term) > -1;\r\n        })\r\n    }\r\n\r\n    filterPost(items,filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({\r\n            term:term\r\n        })\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({\r\n            filter:filter\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {data,term,filter} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n        return (\r\n            <div className='app'>\r\n                <AppHeader\r\n                liked ={liked}\r\n                allPosts = {allPosts}/>\r\n                <div className='search-panel d-flex'>\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}\r\n                    />\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect ={this.onFilterSelect}\r\n                    />\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm\r\n                    onAdd={this.addItem}/>\r\n            </div>\r\n    )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app'\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}